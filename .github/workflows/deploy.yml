name: Build and Deploy to S3 and EC2

on:
  push:
    branches:
      - main
jobs:
  build-front:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install
        working-directory: frontend

      - name: Build Angular Project
        run: npm run build
        working-directory: frontend

      - name: Save build
        uses: actions/upload-artifact@master
        with:
          name: build
          path: frontend/dist/show-do-milhao/
          if-no-files-found: error
          
  deploy-front:
    runs-on: ubuntu-latest
    needs: build-front
    steps:
      - name: Get build
        uses: actions/download-artifact@master
        with:
          name: build
          path: frontend/dist/show-do-milhao/

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.S3_ACESS_TOKEN }}
          aws-secret-access-key: ${{ secrets.S3_SECRET_KEY }}
          aws-region: us-east-1

      - name: Deploy to S3
        run: |
          aws s3 sync ./frontend/dist/show-do-milhao s3://api-show-do-milhao-bucket/
          
  deploy-back:
    runs-on: ubuntu-latest
    steps:
    - name: Code checkout
      uses: actions/checkout@v3
      
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Replace values in the .properties file
      run: |
        sed -i 's|spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost:3306}/show_do_milhao|spring.datasource.url=jdbc:mysql://${{secrets.MYSQL_HOST}}/show_do_milhao|g' backend/src/main/resources/application.properties
        sed -i 's|spring.datasource.username=${MYSQL_USERNAME:root}|spring.datasource.username=${{secrets.MYSQL_USERNAME}}|g' backend/src/main/resources/application.properties
        sed -i 's|spring.datasource.password=${MYSQL_PASSWORD:root}|spring.datasource.password=${{secrets.MYSQL_PASSWORD}}|g' backend/src/main/resources/application.properties
        sed -i 's|api.show_do_milhao.token.secret=${JWT_SECRET:my_token_secret}|api.show_do_milhao.token.secret=${{secrets.JWT_SECRET}}|g' backend/src/main/resources/application.properties
        sed -i 's|amazon.s3.secret.key=${S3_ACESS_TOKEN:my-secret-key}|amazon.s3.secret.key=${{secrets.S3_SECRET_KEY}}|g' backend/src/main/resources/application.properties
        sed -i 's|amazon.s3.acess.key=${S3_ACESS_TOKEN:my-cess-key}|amazon.s3.acess.key=${{secrets.S3_ACESS_TOKEN}}|g' backend/src/main/resources/application.properties
        sed -i 's|amazon.s3.bucket=${S3_BUCKET:bucket}|amazon.s3.bucket=${{secrets.S3_BUCKET}}|g' backend/src/main/resources/application.properties
              
    - name: Build with Maven
      run: mvn -f backend/pom.xml clean install
      
    - name: Copy .jar to EC2 Instance
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.AWS_EC2_HOST }}
        username: ${{ secrets.AWS_EC2_USER }}
        key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        source: "backend/target/showdomilhao-0.0.1-SNAPSHOT.jar"
        target: "/home/ec2-user"
        
    - name: Launch Application
      uses: actions/checkout@v4
      env:
        HOSTNAME: ${{ secrets.AWS_EC2_HOST }}
        USER_NAME: ${{ secrets.AWS_EC2_USER }}
        PRIVATE_KEY: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
        script: |
          pkill -f showdomilhao-0.0.1-SNAPSHOT.jar || true
          sudo systemctl start showdomilhao.service
